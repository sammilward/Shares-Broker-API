// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharesBrokerAPI.DatabaseAccess;

namespace SharesBrokerAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191227131755_PurchaseContainsUser")]
    partial class PurchaseContainsUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SharesBrokerAPI.Domain.Models.Purchase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PurchaseTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ShareCompanySymbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("TotalValue")
                        .HasColumnType("float");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ShareCompanySymbol");

                    b.HasIndex("Username");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SharesBrokerAPI.Domain.Models.Share", b =>
                {
                    b.Property<string>("CompanySymbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberOfShares")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("CompanySymbol");

                    b.ToTable("Shares");
                });

            modelBuilder.Entity("SharesBrokerAPI.Domain.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("WalletValue")
                        .HasColumnType("float");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SharesBrokerAPI.Domain.Models.UserShare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ShareCompanySymbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ShareCompanySymbol");

                    b.HasIndex("Username");

                    b.ToTable("UserShares");
                });

            modelBuilder.Entity("SharesBrokerAPI.Domain.Models.Purchase", b =>
                {
                    b.HasOne("SharesBrokerAPI.Domain.Models.Share", "Share")
                        .WithMany()
                        .HasForeignKey("ShareCompanySymbol");

                    b.HasOne("SharesBrokerAPI.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Username");
                });

            modelBuilder.Entity("SharesBrokerAPI.Domain.Models.UserShare", b =>
                {
                    b.HasOne("SharesBrokerAPI.Domain.Models.Share", "Share")
                        .WithMany()
                        .HasForeignKey("ShareCompanySymbol");

                    b.HasOne("SharesBrokerAPI.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Username");
                });
#pragma warning restore 612, 618
        }
    }
}
