//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CurrencyConverterService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://DOCwebServices/", ConfigurationName="CurrencyConverterService.CurrencyConversionWS")]
    public interface CurrencyConversionWS
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://DOCwebServices/CurrencyConversionWS/GetCurrenciesRequest", ReplyAction="http://DOCwebServices/CurrencyConversionWS/GetCurrenciesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<CurrencyConverterService.GetCurrenciesResponse> GetCurrenciesAsync(CurrencyConverterService.GetCurrenciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://DOCwebServices/CurrencyConversionWS/ConvertRequest", ReplyAction="http://DOCwebServices/CurrencyConversionWS/ConvertResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<CurrencyConverterService.ConvertResponse> ConvertAsync(CurrencyConverterService.ConvertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://DOCwebServices/CurrencyConversionWS/GetConversionRateRequest", ReplyAction="http://DOCwebServices/CurrencyConversionWS/GetConversionRateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<CurrencyConverterService.GetConversionRateResponse> GetConversionRateAsync(CurrencyConverterService.GetConversionRateRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://DOCwebServices/")]
    public partial class currency
    {
        
        private string codeField;
        
        private string nameField;
        
        private double rateInEURField;
        
        private string updatedTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public double rateInEUR
        {
            get
            {
                return this.rateInEURField;
            }
            set
            {
                this.rateInEURField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string updatedTime
        {
            get
            {
                return this.updatedTimeField;
            }
            set
            {
                this.updatedTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://DOCwebServices/")]
    public partial class convertResponce
    {
        
        private string dateOfConverstionField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string dateOfConverstion
        {
            get
            {
                return this.dateOfConverstionField;
            }
            set
            {
                this.dateOfConverstionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public double value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencies", WrapperNamespace="http://DOCwebServices/", IsWrapped=true)]
    public partial class GetCurrenciesRequest
    {
        
        public GetCurrenciesRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrenciesResponse", WrapperNamespace="http://DOCwebServices/", IsWrapped=true)]
    public partial class GetCurrenciesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://DOCwebServices/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CurrencyConverterService.currency[] @return;
        
        public GetCurrenciesResponse()
        {
        }
        
        public GetCurrenciesResponse(CurrencyConverterService.currency[] @return)
        {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Convert", WrapperNamespace="http://DOCwebServices/", IsWrapped=true)]
    public partial class ConvertRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://DOCwebServices/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double arg0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://DOCwebServices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://DOCwebServices/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2;
        
        public ConvertRequest()
        {
        }
        
        public ConvertRequest(double arg0, string arg1, string arg2)
        {
            this.arg0 = arg0;
            this.arg1 = arg1;
            this.arg2 = arg2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertResponse", WrapperNamespace="http://DOCwebServices/", IsWrapped=true)]
    public partial class ConvertResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://DOCwebServices/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CurrencyConverterService.convertResponce @return;
        
        public ConvertResponse()
        {
        }
        
        public ConvertResponse(CurrencyConverterService.convertResponce @return)
        {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConversionRate", WrapperNamespace="http://DOCwebServices/", IsWrapped=true)]
    public partial class GetConversionRateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://DOCwebServices/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://DOCwebServices/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1;
        
        public GetConversionRateRequest()
        {
        }
        
        public GetConversionRateRequest(string arg0, string arg1)
        {
            this.arg0 = arg0;
            this.arg1 = arg1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConversionRateResponse", WrapperNamespace="http://DOCwebServices/", IsWrapped=true)]
    public partial class GetConversionRateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://DOCwebServices/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double @return;
        
        public GetConversionRateResponse()
        {
        }
        
        public GetConversionRateResponse(double @return)
        {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public interface CurrencyConversionWSChannel : CurrencyConverterService.CurrencyConversionWS, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public partial class CurrencyConversionWSClient : System.ServiceModel.ClientBase<CurrencyConverterService.CurrencyConversionWS>, CurrencyConverterService.CurrencyConversionWS
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CurrencyConversionWSClient() : 
                base(CurrencyConversionWSClient.GetDefaultBinding(), CurrencyConversionWSClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.CurrencyConversionWSPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CurrencyConversionWSClient(EndpointConfiguration endpointConfiguration) : 
                base(CurrencyConversionWSClient.GetBindingForEndpoint(endpointConfiguration), CurrencyConversionWSClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CurrencyConversionWSClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CurrencyConversionWSClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CurrencyConversionWSClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CurrencyConversionWSClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CurrencyConversionWSClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CurrencyConverterService.GetCurrenciesResponse> CurrencyConverterService.CurrencyConversionWS.GetCurrenciesAsync(CurrencyConverterService.GetCurrenciesRequest request)
        {
            return base.Channel.GetCurrenciesAsync(request);
        }
        
        public System.Threading.Tasks.Task<CurrencyConverterService.GetCurrenciesResponse> GetCurrenciesAsync()
        {
            CurrencyConverterService.GetCurrenciesRequest inValue = new CurrencyConverterService.GetCurrenciesRequest();
            return ((CurrencyConverterService.CurrencyConversionWS)(this)).GetCurrenciesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CurrencyConverterService.ConvertResponse> CurrencyConverterService.CurrencyConversionWS.ConvertAsync(CurrencyConverterService.ConvertRequest request)
        {
            return base.Channel.ConvertAsync(request);
        }
        
        public System.Threading.Tasks.Task<CurrencyConverterService.ConvertResponse> ConvertAsync(double arg0, string arg1, string arg2)
        {
            CurrencyConverterService.ConvertRequest inValue = new CurrencyConverterService.ConvertRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            inValue.arg2 = arg2;
            return ((CurrencyConverterService.CurrencyConversionWS)(this)).ConvertAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CurrencyConverterService.GetConversionRateResponse> CurrencyConverterService.CurrencyConversionWS.GetConversionRateAsync(CurrencyConverterService.GetConversionRateRequest request)
        {
            return base.Channel.GetConversionRateAsync(request);
        }
        
        public System.Threading.Tasks.Task<CurrencyConverterService.GetConversionRateResponse> GetConversionRateAsync(string arg0, string arg1)
        {
            CurrencyConverterService.GetConversionRateRequest inValue = new CurrencyConverterService.GetConversionRateRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            return ((CurrencyConverterService.CurrencyConversionWS)(this)).GetConversionRateAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CurrencyConversionWSPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CurrencyConversionWSPort))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8080/CurrencyConvertor/CurrencyConversionWSService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CurrencyConversionWSClient.GetBindingForEndpoint(EndpointConfiguration.CurrencyConversionWSPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CurrencyConversionWSClient.GetEndpointAddress(EndpointConfiguration.CurrencyConversionWSPort);
        }
        
        public enum EndpointConfiguration
        {
            
            CurrencyConversionWSPort,
        }
    }
}
